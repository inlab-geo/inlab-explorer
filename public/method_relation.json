{"name": "CoFI", "link_git": "https://github.com/inlab-geo/cofi", "link_doc": "https://cofi.readthedocs.io", "description": "Common Framework for Inference", "examples": [{"name": "Receiver Function Inversion - receiver_function_inversion.ipynb", "description": "We run inversion on a toy receiver function model with optimization and sampling in this example", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/receiver_function/receiver_function_inversion.ipynb"}, {"name": "Linear Regression - linear_regression.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression.ipynb"}, {"name": "Linear Regression - linear_regression_optimizer_minimize.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_optimizer_minimize.py"}, {"name": "FMM Tomography - fmm_tomography_gaussian_prior_scipy_opt.py", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_gaussian_prior_scipy_opt.py"}, {"name": "FMM Tomography - fmm_tomography_reg_scipy_optimiser.py", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_reg_scipy_optimiser.py"}, {"name": "PyGIMLi DCIP - pygimli_dcip.ipynb", "description": "Using the DCIP solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip.ipynb"}, {"name": "PyGIMLi DCIP - pygimli_dcip_century_tri_mesh.ipynb", "description": "Using the DCIP solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip_century_tri_mesh.ipynb"}, {"name": "Linear Regression - linear_regression_pytorch_optim.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_pytorch_optim.py"}, {"name": "PyGIMLi ERT - pygimli_ert_tri_torch_optim.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_torch_optim.py"}, {"name": "Linear Regression - linear_regression_sealevel.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_sealevel.ipynb"}, {"name": "Linear Regression - linear_regression_linear_system_solver.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_linear_system_solver.py"}, {"name": "Linear Regression - linear_regression_linear_system_general.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_linear_system_general.py"}, {"name": "Surface Wave Tomography via Seislib - sw_tomography.ipynb", "description": "We apply CoFI to measurements of surface-wave velocity collected across the USArray", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/sw_tomography/sw_tomography.ipynb"}, {"name": "Xray Tomography - xray_tomography.ipynb", "description": "We look at a linear inverse problem based on Xray Tomography", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/xray_tomography/xray_tomography.ipynb"}, {"name": "Xray Tomography - xray_tomography_linear_solver.py", "description": "We look at a linear inverse problem based on Xray Tomography", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/xray_tomography/xray_tomography_linear_solver.py"}, {"name": "Non-linear Curve Fitting - nonlinear_curve_fitting.ipynb", "description": "Non-linear curve fitting", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/nonlinear_curve_fitting/nonlinear_curve_fitting.ipynb"}, {"name": "PyGIMLi ERT - pygimli_ert_toy_emcee_parallel.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_toy_emcee_parallel.py"}, {"name": "PyGIMLi ERT - pygimli_ert_toy_emcee.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_toy_emcee.py"}, {"name": "Linear Regression - linear_regression_emcee_sampler.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_emcee_sampler.py"}, {"name": "PyGIMLi ERT - pygimli_ert_rect_gauss_newton.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_rect_gauss_newton.py"}, {"name": "PyGIMLi ERT - pygimli_ert_tri_gauss_newton.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_gauss_newton.py"}, {"name": "FMM Tomography - fmm_tomography.ipynb", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography.ipynb"}, {"name": "FMM Tomography - fmm_tomography_regularization_discussion.ipynb", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_regularization_discussion.ipynb"}, {"name": "FMM Tomography - fmm_tomography_simple_newton.py", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_simple_newton.py"}, {"name": "Linear Regression - linear_regression_optimizer_lstsq.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_optimizer_lstsq.py"}], "children": [{"name": "Parameter estimation", "link_git": null, "link_doc": null, "description": "Parameter estimation is the process of determining the specific numerical values that define a parametrised (mathematical) model, often using methods like Maximum Likelihood Estimation or Least Squares to best fit the observed data.", "examples": [{"name": "Receiver Function Inversion - receiver_function_inversion.ipynb", "description": "We run inversion on a toy receiver function model with optimization and sampling in this example", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/receiver_function/receiver_function_inversion.ipynb"}, {"name": "Linear Regression - linear_regression.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression.ipynb"}, {"name": "Linear Regression - linear_regression_optimizer_minimize.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_optimizer_minimize.py"}, {"name": "FMM Tomography - fmm_tomography_gaussian_prior_scipy_opt.py", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_gaussian_prior_scipy_opt.py"}, {"name": "FMM Tomography - fmm_tomography_reg_scipy_optimiser.py", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_reg_scipy_optimiser.py"}, {"name": "PyGIMLi DCIP - pygimli_dcip.ipynb", "description": "Using the DCIP solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip.ipynb"}, {"name": "PyGIMLi DCIP - pygimli_dcip_century_tri_mesh.ipynb", "description": "Using the DCIP solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip_century_tri_mesh.ipynb"}, {"name": "Linear Regression - linear_regression_pytorch_optim.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_pytorch_optim.py"}, {"name": "PyGIMLi ERT - pygimli_ert_tri_torch_optim.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_torch_optim.py"}, {"name": "Linear Regression - linear_regression_sealevel.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_sealevel.ipynb"}, {"name": "Linear Regression - linear_regression_linear_system_solver.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_linear_system_solver.py"}, {"name": "Linear Regression - linear_regression_linear_system_general.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_linear_system_general.py"}, {"name": "Surface Wave Tomography via Seislib - sw_tomography.ipynb", "description": "We apply CoFI to measurements of surface-wave velocity collected across the USArray", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/sw_tomography/sw_tomography.ipynb"}, {"name": "Xray Tomography - xray_tomography.ipynb", "description": "We look at a linear inverse problem based on Xray Tomography", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/xray_tomography/xray_tomography.ipynb"}, {"name": "Xray Tomography - xray_tomography_linear_solver.py", "description": "We look at a linear inverse problem based on Xray Tomography", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/xray_tomography/xray_tomography_linear_solver.py"}, {"name": "PyGIMLi ERT - pygimli_ert_rect_gauss_newton.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_rect_gauss_newton.py"}, {"name": "PyGIMLi ERT - pygimli_ert_tri_gauss_newton.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_gauss_newton.py"}, {"name": "FMM Tomography - fmm_tomography.ipynb", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography.ipynb"}, {"name": "FMM Tomography - fmm_tomography_regularization_discussion.ipynb", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_regularization_discussion.ipynb"}, {"name": "FMM Tomography - fmm_tomography_simple_newton.py", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_simple_newton.py"}, {"name": "Linear Regression - linear_regression_optimizer_lstsq.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_optimizer_lstsq.py"}, {"name": "Non-linear Curve Fitting - nonlinear_curve_fitting.ipynb", "description": "Non-linear curve fitting", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/nonlinear_curve_fitting/nonlinear_curve_fitting.ipynb"}], "children": [{"name": "Optimization", "link_git": null, "link_doc": null, "description": "Optimization involves finding the best solution from a set of possible solutions, usually by minimizing or maximizing a certain function.", "examples": [{"name": "Receiver Function Inversion - receiver_function_inversion.ipynb", "description": "We run inversion on a toy receiver function model with optimization and sampling in this example", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/receiver_function/receiver_function_inversion.ipynb"}, {"name": "Linear Regression - linear_regression.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression.ipynb"}, {"name": "Linear Regression - linear_regression_optimizer_minimize.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_optimizer_minimize.py"}, {"name": "FMM Tomography - fmm_tomography_gaussian_prior_scipy_opt.py", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_gaussian_prior_scipy_opt.py"}, {"name": "FMM Tomography - fmm_tomography_reg_scipy_optimiser.py", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_reg_scipy_optimiser.py"}, {"name": "PyGIMLi DCIP - pygimli_dcip.ipynb", "description": "Using the DCIP solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip.ipynb"}, {"name": "PyGIMLi DCIP - pygimli_dcip_century_tri_mesh.ipynb", "description": "Using the DCIP solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip_century_tri_mesh.ipynb"}, {"name": "Linear Regression - linear_regression_pytorch_optim.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_pytorch_optim.py"}, {"name": "PyGIMLi ERT - pygimli_ert_tri_torch_optim.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_torch_optim.py"}, {"name": "PyGIMLi ERT - pygimli_ert_rect_gauss_newton.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_rect_gauss_newton.py"}, {"name": "PyGIMLi ERT - pygimli_ert_tri_gauss_newton.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_gauss_newton.py"}, {"name": "FMM Tomography - fmm_tomography.ipynb", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography.ipynb"}, {"name": "FMM Tomography - fmm_tomography_regularization_discussion.ipynb", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_regularization_discussion.ipynb"}, {"name": "FMM Tomography - fmm_tomography_simple_newton.py", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_simple_newton.py"}, {"name": "Linear Regression - linear_regression_optimizer_lstsq.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_optimizer_lstsq.py"}, {"name": "Non-linear Curve Fitting - nonlinear_curve_fitting.ipynb", "description": "Non-linear curve fitting", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/nonlinear_curve_fitting/nonlinear_curve_fitting.ipynb"}], "children": [{"name": "Non linear", "link_git": null, "link_doc": null, "description": "Non-linear optimization focuses on finding the maximum, or minimum, of a function that is not necessarily quadratic over its parameters.", "examples": [{"name": "Receiver Function Inversion - receiver_function_inversion.ipynb", "description": "We run inversion on a toy receiver function model with optimization and sampling in this example", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/receiver_function/receiver_function_inversion.ipynb"}, {"name": "Linear Regression - linear_regression.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression.ipynb"}, {"name": "Linear Regression - linear_regression_optimizer_minimize.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_optimizer_minimize.py"}, {"name": "FMM Tomography - fmm_tomography_gaussian_prior_scipy_opt.py", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_gaussian_prior_scipy_opt.py"}, {"name": "FMM Tomography - fmm_tomography_reg_scipy_optimiser.py", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_reg_scipy_optimiser.py"}, {"name": "PyGIMLi DCIP - pygimli_dcip.ipynb", "description": "Using the DCIP solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip.ipynb"}, {"name": "PyGIMLi DCIP - pygimli_dcip_century_tri_mesh.ipynb", "description": "Using the DCIP solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip_century_tri_mesh.ipynb"}, {"name": "Linear Regression - linear_regression_pytorch_optim.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_pytorch_optim.py"}, {"name": "PyGIMLi ERT - pygimli_ert_tri_torch_optim.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_torch_optim.py"}, {"name": "PyGIMLi ERT - pygimli_ert_rect_gauss_newton.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_rect_gauss_newton.py"}, {"name": "PyGIMLi ERT - pygimli_ert_tri_gauss_newton.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_gauss_newton.py"}, {"name": "FMM Tomography - fmm_tomography.ipynb", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography.ipynb"}, {"name": "FMM Tomography - fmm_tomography_regularization_discussion.ipynb", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_regularization_discussion.ipynb"}, {"name": "FMM Tomography - fmm_tomography_simple_newton.py", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_simple_newton.py"}, {"name": "Linear Regression - linear_regression_optimizer_lstsq.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_optimizer_lstsq.py"}, {"name": "Non-linear Curve Fitting - nonlinear_curve_fitting.ipynb", "description": "Non-linear curve fitting", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/nonlinear_curve_fitting/nonlinear_curve_fitting.ipynb"}], "children": [{"name": "scipy.optimize.minimize", "link_git": null, "link_doc": null, "description": null, "examples": [{"name": "Receiver Function Inversion - receiver_function_inversion.ipynb", "description": "We run inversion on a toy receiver function model with optimization and sampling in this example", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/receiver_function/receiver_function_inversion.ipynb"}, {"name": "Linear Regression - linear_regression.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression.ipynb"}, {"name": "Linear Regression - linear_regression_optimizer_minimize.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_optimizer_minimize.py"}, {"name": "FMM Tomography - fmm_tomography_gaussian_prior_scipy_opt.py", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_gaussian_prior_scipy_opt.py"}, {"name": "FMM Tomography - fmm_tomography_reg_scipy_optimiser.py", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_reg_scipy_optimiser.py"}, {"name": "PyGIMLi DCIP - pygimli_dcip.ipynb", "description": "Using the DCIP solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip.ipynb"}, {"name": "PyGIMLi DCIP - pygimli_dcip_century_tri_mesh.ipynb", "description": "Using the DCIP solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip_century_tri_mesh.ipynb"}], "children": [{"name": "Nelder-Mead", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "link_doc": "https://docs.scipy.org/doc/scipy/reference/optimize.minimize-neldermead.html#optimize-minimize-neldermead\n", "description": "Uses the Simplex algorithm.", "examples": [{"name": "Receiver Function Inversion - receiver_function_inversion.ipynb", "description": "We run inversion on a toy receiver function model with optimization and sampling in this example", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/receiver_function/receiver_function_inversion.ipynb"}], "children": []}, {"name": "Powell", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "link_doc": "https://docs.scipy.org/doc/scipy/reference/optimize.minimize-powell.html#optimize-minimize-powell\n", "description": "A modification of Powell\u2019s method which is a conjugate direction method.", "children": []}, {"name": "CG", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "link_doc": "https://docs.scipy.org/doc/scipy/reference/optimize.minimize-cg.html#optimize-minimize-cg\n", "description": "Uses a nonlinear conjugate gradient algorithm by Polak and Ribiere, a variant of the Fletcher-Reeves method", "children": []}, {"name": "BFGS", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "link_doc": "https://docs.scipy.org/doc/scipy/reference/optimize.minimize-bfgs.html#optimize-minimize-bfgs\n", "description": "Uses the quasi-Newton method of Broyden, Fletcher, Goldfarb, and Shanno (BFGS).", "examples": [{"name": "Linear Regression - linear_regression.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression.ipynb"}, {"name": "Linear Regression - linear_regression_optimizer_minimize.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_optimizer_minimize.py"}], "children": []}, {"name": "Newton-CG", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "link_doc": "https://docs.scipy.org/doc/scipy/reference/optimize.minimize-newtoncg.html#optimize-minimize-newtoncg\n", "description": "Uses a Newton-CG algorithm (also known as the truncated Newton method).", "examples": [{"name": "FMM Tomography - fmm_tomography_gaussian_prior_scipy_opt.py", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_gaussian_prior_scipy_opt.py"}, {"name": "FMM Tomography - fmm_tomography_reg_scipy_optimiser.py", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_reg_scipy_optimiser.py"}], "children": []}, {"name": "L-BFGS-B", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "link_doc": "https://docs.scipy.org/doc/scipy/reference/optimize.minimize-lbfgsb.html#optimize-minimize-lbfgsb\n", "description": "Uses the L-BFGS-B algorithm for bound constrained minimization.", "children": []}, {"name": "TNC", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "link_doc": "https://docs.scipy.org/doc/scipy/reference/optimize.minimize-tnc.html#optimize-minimize-tnc\n", "description": "Uses a truncated Newton algorithm to minimize a function with variables subject to bounds.", "children": []}, {"name": "COBYLA", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "link_doc": "https://docs.scipy.org/doc/scipy/reference/optimize.minimize-cobyla.html#optimize-minimize-cobyla\n", "description": "Uses the Constrained Optimization BY Linear Approximation (COBYLA) method.", "children": []}, {"name": "SLSQP", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "link_doc": "https://docs.scipy.org/doc/scipy/reference/optimize.minimize-slsqp.html#optimize-minimize-slsqp\n", "description": "Uses Sequential Least SQuares Programming to minimize a function of several variables with any combination of bounds, equality and inequality constraints.", "children": []}, {"name": "trust-constr", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "link_doc": "https://docs.scipy.org/doc/scipy/reference/optimize.minimize-trustconstr.html#optimize-minimize-trustconstr\n", "description": "A trust-region algorithm for constrained optimization.", "children": []}, {"name": "dogleg", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "link_doc": "https://docs.scipy.org/doc/scipy/reference/optimize.minimize-dogleg.html#optimize-minimize-dogleg\n", "description": "Uses the dog-leg trust-region algorithm for unconstrained minimization.", "children": []}, {"name": "trust-ncg", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "link_doc": "https://docs.scipy.org/doc/scipy/reference/optimize.minimize-trustncg.html#optimize-minimize-trustncg\n", "description": "Uses the Newton conjugate gradient trust-region algorithm for unconstrained minimization.", "examples": [{"name": "PyGIMLi DCIP - pygimli_dcip.ipynb", "description": "Using the DCIP solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip.ipynb"}, {"name": "PyGIMLi DCIP - pygimli_dcip_century_tri_mesh.ipynb", "description": "Using the DCIP solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip_century_tri_mesh.ipynb"}], "children": []}, {"name": "trust-exact", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "link_doc": "https://docs.scipy.org/doc/scipy/reference/optimize.minimize-trustexact.html#optimize-minimize-trustexact\n", "description": "A trust-region method for unconstrained minimization in which quadratic subproblems are solved almost exactly.", "children": []}, {"name": "trust-krylov", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_min.py", "link_doc": "https://docs.scipy.org/doc/scipy/reference/optimize.minimize-trustkrylov.html#optimize-minimize-trustkrylov\n", "description": "Uses the Newton GLTR trust-region algorithm for unconstrained minimization.", "children": []}]}, {"name": "torch.optim", "link_git": null, "link_doc": null, "description": null, "examples": [{"name": "Linear Regression - linear_regression_pytorch_optim.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_pytorch_optim.py"}, {"name": "PyGIMLi ERT - pygimli_ert_tri_torch_optim.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_torch_optim.py"}, {"name": "PyGIMLi DCIP - pygimli_dcip.ipynb", "description": "Using the DCIP solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip.ipynb"}], "children": [{"name": "Adadelta", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "link_doc": "https://pytorch.org/docs/stable/generated/torch.optim.Adadelta.html#torch.optim.Adadelta\n", "description": "ADADELTA, an Adaptive Learning Rate Method.", "children": []}, {"name": "Adagrad", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "link_doc": "https://pytorch.org/docs/stable/generated/torch.optim.Adagrad.html#torch.optim.Adagrad\n", "description": "Adaptive Subgradient Methods for Online Learning and Stochastic Optimization.", "children": []}, {"name": "Adam", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "link_doc": "https://pytorch.org/docs/stable/generated/torch.optim.Adam.html#torch.optim.Adam\n", "description": "Adam, a Method for Stochastic Optimization.", "examples": [{"name": "Linear Regression - linear_regression_pytorch_optim.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_pytorch_optim.py"}], "children": []}, {"name": "AdamW", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "link_doc": "https://pytorch.org/docs/stable/generated/torch.optim.AdamW.html#torch.optim.AdamW\n", "description": "Decoupled Weight Decay Regularization.", "children": []}, {"name": "SparseAdam", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "link_doc": "https://pytorch.org/docs/stable/generated/torch.optim.SparseAdam.html#torch.optim.SparseAdam\n", "description": "Lazy version of Adam algorithm suitable for sparse tensors.", "children": []}, {"name": "Adamax", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "link_doc": "https://pytorch.org/docs/stable/generated/torch.optim.Adamax.html#torch.optim.Adamax\n", "description": "Adamax algorithm (a variant of Adam based on infinity norm).", "children": []}, {"name": "ASGD", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "link_doc": "https://pytorch.org/docs/stable/generated/torch.optim.ASGD.html#torch.optim.ASGD\n", "description": "Averaged Stochastic Gradient Descent.", "children": []}, {"name": "LBFGS", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "link_doc": "https://pytorch.org/docs/stable/generated/torch.optim.LBFGS.html#torch.optim.LBFGS\n", "description": "L-BFGS algorithm, heavily inspired by minFunc.", "examples": [{"name": "PyGIMLi ERT - pygimli_ert_tri_torch_optim.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_torch_optim.py"}], "children": []}, {"name": "NAdam", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "link_doc": "https://pytorch.org/docs/stable/generated/torch.optim.NAdam.html#torch.optim.NAdam\n", "description": "NAdam algorithm, incorporating Nesterov Momentum into Adam", "children": []}, {"name": "RAdam", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "link_doc": "https://pytorch.org/docs/stable/generated/torch.optim.RAdam.html#torch.optim.RAdam\n", "description": "RAdam algorithm, on the variance of the adaptive learning rate and beyond", "examples": [{"name": "PyGIMLi DCIP - pygimli_dcip.ipynb", "description": "Using the DCIP solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip.ipynb"}], "children": []}, {"name": "RMSprop", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "link_doc": "https://pytorch.org/docs/stable/generated/torch.optim.RMSprop.html#torch.optim.RMSprop\n", "description": "RMSprop, a form of stochastic gradient descent where the gradients are divided by a running average of their recent magnitude", "children": []}, {"name": "Rprop", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "link_doc": "https://pytorch.org/docs/stable/generated/torch.optim.Rprop.html#torch.optim.Rprop\n", "description": "The resilient backpropagation algorithm.", "children": []}, {"name": "SGD", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_pytorch_optim.py", "link_doc": "https://pytorch.org/docs/stable/generated/torch.optim.SGD.html#torch.optim.SGD\n", "description": "The stochastic gradient descent (optionally with momentum).", "children": []}]}, {"name": "cofi.simple_newton", "link_git": null, "link_doc": null, "description": null, "examples": [{"name": "PyGIMLi ERT - pygimli_ert_rect_gauss_newton.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_rect_gauss_newton.py"}, {"name": "PyGIMLi ERT - pygimli_ert_tri_gauss_newton.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_gauss_newton.py"}, {"name": "FMM Tomography - fmm_tomography.ipynb", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography.ipynb"}, {"name": "FMM Tomography - fmm_tomography_regularization_discussion.ipynb", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_regularization_discussion.ipynb"}, {"name": "FMM Tomography - fmm_tomography_simple_newton.py", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_simple_newton.py"}], "children": [{"name": "Newton's method in optimization", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_cofi_simple_newton.py", "link_doc": "https://en.wikipedia.org/wiki/Newton%27s_method_in_optimization\n", "description": "CoFI's own implementation of the Newton's method in optimization with stopping criteria.", "examples": [{"name": "PyGIMLi ERT - pygimli_ert_rect_gauss_newton.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_rect_gauss_newton.py"}, {"name": "PyGIMLi ERT - pygimli_ert_tri_gauss_newton.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_gauss_newton.py"}, {"name": "FMM Tomography - fmm_tomography.ipynb", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography.ipynb"}, {"name": "FMM Tomography - fmm_tomography_regularization_discussion.ipynb", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_regularization_discussion.ipynb"}, {"name": "FMM Tomography - fmm_tomography_simple_newton.py", "description": "Seismic wave tomography via fast marching method", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_simple_newton.py"}], "children": []}]}, {"name": "scipy.optimize.least_squares", "link_git": null, "link_doc": null, "description": null, "examples": [{"name": "Linear Regression - linear_regression_optimizer_lstsq.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_optimizer_lstsq.py"}, {"name": "Non-linear Curve Fitting - nonlinear_curve_fitting.ipynb", "description": "Non-linear curve fitting", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/nonlinear_curve_fitting/nonlinear_curve_fitting.ipynb"}], "children": [{"name": "trf", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_lstsq.py", "link_doc": null, "description": "Trust Region Reflective algorithm, particularly suitable for large sparse problems with bounds.", "examples": [{"name": "Linear Regression - linear_regression_optimizer_lstsq.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_optimizer_lstsq.py"}], "children": []}, {"name": "dogbox", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_lstsq.py", "link_doc": null, "description": "Dogleg algorithm with rectangular trust regions, typical use case is small problems with bounds.", "children": []}, {"name": "lm", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_opt_lstsq.py", "link_doc": null, "description": "Levenberg-Marquardt algorithm as implemented in MINPACK. Doesn\u2019t handle bounds and sparse Jacobians.", "examples": [{"name": "Non-linear Curve Fitting - nonlinear_curve_fitting.ipynb", "description": "Non-linear curve fitting", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/nonlinear_curve_fitting/nonlinear_curve_fitting.ipynb"}], "children": []}]}]}]}, {"name": "Matrix based solvers", "link_git": null, "link_doc": null, "description": "Matrix-based solvers are computational algorithms that solve systems of equations, which often arise in linear or iteratively linear parameter estimation problems.", "examples": [{"name": "Linear Regression - linear_regression.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression.ipynb"}, {"name": "Linear Regression - linear_regression_sealevel.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_sealevel.ipynb"}, {"name": "Linear Regression - linear_regression_linear_system_solver.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_linear_system_solver.py"}, {"name": "Linear Regression - linear_regression_linear_system_general.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_linear_system_general.py"}, {"name": "Surface Wave Tomography via Seislib - sw_tomography.ipynb", "description": "We apply CoFI to measurements of surface-wave velocity collected across the USArray", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/sw_tomography/sw_tomography.ipynb"}, {"name": "Xray Tomography - xray_tomography.ipynb", "description": "We look at a linear inverse problem based on Xray Tomography", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/xray_tomography/xray_tomography.ipynb"}, {"name": "Xray Tomography - xray_tomography_linear_solver.py", "description": "We look at a linear inverse problem based on Xray Tomography", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/xray_tomography/xray_tomography_linear_solver.py"}], "children": [{"name": "Linear system solvers", "link_git": null, "link_doc": null, "description": "Linear system solvers are algorithms designed to find the values of unknowns in a set of linear equations.", "examples": [{"name": "Linear Regression - linear_regression.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression.ipynb"}, {"name": "Linear Regression - linear_regression_sealevel.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_sealevel.ipynb"}, {"name": "Linear Regression - linear_regression_linear_system_solver.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_linear_system_solver.py"}, {"name": "Linear Regression - linear_regression_linear_system_general.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_linear_system_general.py"}, {"name": "Surface Wave Tomography via Seislib - sw_tomography.ipynb", "description": "We apply CoFI to measurements of surface-wave velocity collected across the USArray", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/sw_tomography/sw_tomography.ipynb"}, {"name": "Xray Tomography - xray_tomography.ipynb", "description": "We look at a linear inverse problem based on Xray Tomography", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/xray_tomography/xray_tomography.ipynb"}, {"name": "Xray Tomography - xray_tomography_linear_solver.py", "description": "We look at a linear inverse problem based on Xray Tomography", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/xray_tomography/xray_tomography_linear_solver.py"}], "children": [{"name": "scipy.linalg.lstsq", "link_git": null, "link_doc": null, "description": null, "examples": [{"name": "Linear Regression - linear_regression.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression.ipynb"}, {"name": "Linear Regression - linear_regression_sealevel.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_sealevel.ipynb"}, {"name": "Linear Regression - linear_regression_linear_system_solver.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_linear_system_solver.py"}, {"name": "Linear Regression - linear_regression_linear_system_general.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_linear_system_general.py"}, {"name": "Surface Wave Tomography via Seislib - sw_tomography.ipynb", "description": "We apply CoFI to measurements of surface-wave velocity collected across the USArray", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/sw_tomography/sw_tomography.ipynb"}, {"name": "Xray Tomography - xray_tomography.ipynb", "description": "We look at a linear inverse problem based on Xray Tomography", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/xray_tomography/xray_tomography.ipynb"}, {"name": "Xray Tomography - xray_tomography_linear_solver.py", "description": "We look at a linear inverse problem based on Xray Tomography", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/xray_tomography/xray_tomography_linear_solver.py"}], "children": [{"name": "gelsd", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_lstsq.py", "link_doc": null, "description": "Solve linear least squares using divide-and-conquer SVD.", "examples": [{"name": "Linear Regression - linear_regression.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression.ipynb"}, {"name": "Linear Regression - linear_regression_sealevel.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_sealevel.ipynb"}, {"name": "Linear Regression - linear_regression_linear_system_solver.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_linear_system_solver.py"}, {"name": "Linear Regression - linear_regression_linear_system_general.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_linear_system_general.py"}, {"name": "Surface Wave Tomography via Seislib - sw_tomography.ipynb", "description": "We apply CoFI to measurements of surface-wave velocity collected across the USArray", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/sw_tomography/sw_tomography.ipynb"}, {"name": "Xray Tomography - xray_tomography.ipynb", "description": "We look at a linear inverse problem based on Xray Tomography", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/xray_tomography/xray_tomography.ipynb"}, {"name": "Xray Tomography - xray_tomography_linear_solver.py", "description": "We look at a linear inverse problem based on Xray Tomography", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/xray_tomography/xray_tomography_linear_solver.py"}], "children": []}, {"name": "gelsy", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_lstsq.py", "link_doc": null, "description": "Solve linear least squares using complete orthogonal factorization.", "children": []}, {"name": "gelss", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_scipy_lstsq.py", "link_doc": null, "description": "Solve linear least squares using SVD.", "children": []}]}]}]}]}, {"name": "Ensemble methods", "link_git": null, "link_doc": null, "description": "Ensemble methods are a class of inference technique that result in multiple models, rather than a single model through parameter estimation, these might be driven by data fitting or Bayesian sampling.", "examples": [{"name": "Non-linear Curve Fitting - nonlinear_curve_fitting.ipynb", "description": "Non-linear curve fitting", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/nonlinear_curve_fitting/nonlinear_curve_fitting.ipynb"}, {"name": "PyGIMLi ERT - pygimli_ert_toy_emcee_parallel.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_toy_emcee_parallel.py"}, {"name": "PyGIMLi ERT - pygimli_ert_toy_emcee.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_toy_emcee.py"}, {"name": "Linear Regression - linear_regression.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression.ipynb"}, {"name": "Linear Regression - linear_regression_sealevel.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_sealevel.ipynb"}, {"name": "Linear Regression - linear_regression_emcee_sampler.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_emcee_sampler.py"}, {"name": "Receiver Function Inversion - receiver_function_inversion.ipynb", "description": "We run inversion on a toy receiver function model with optimization and sampling in this example", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/receiver_function/receiver_function_inversion.ipynb"}], "children": [{"name": "Bayesian sampling", "link_git": null, "link_doc": null, "description": "Bayesian sampling is a technique for drawing samples (models) that follow a probability distribution of unknown parameters based on observed data and prior beliefs.", "examples": [{"name": "Non-linear Curve Fitting - nonlinear_curve_fitting.ipynb", "description": "Non-linear curve fitting", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/nonlinear_curve_fitting/nonlinear_curve_fitting.ipynb"}, {"name": "PyGIMLi ERT - pygimli_ert_toy_emcee_parallel.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_toy_emcee_parallel.py"}, {"name": "PyGIMLi ERT - pygimli_ert_toy_emcee.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_toy_emcee.py"}, {"name": "Linear Regression - linear_regression.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression.ipynb"}, {"name": "Linear Regression - linear_regression_sealevel.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_sealevel.ipynb"}, {"name": "Linear Regression - linear_regression_emcee_sampler.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_emcee_sampler.py"}, {"name": "Receiver Function Inversion - receiver_function_inversion.ipynb", "description": "We run inversion on a toy receiver function model with optimization and sampling in this example", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/receiver_function/receiver_function_inversion.ipynb"}], "children": [{"name": "Trans-D McMC", "link_git": null, "link_doc": null, "description": "Trans-Dimensional Markov chain Monte Carlo (Trans-D McMC) is a specialized form of McMC that allows for model selection by transitioning between different dimensional spaces.", "children": [{"name": "bayesbay", "link_git": null, "link_doc": null, "description": null, "children": [{"name": "VanillaSampler", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_bayes_bay.py", "link_doc": "https://bayes-bay.readthedocs.io/en/latest/api/generated/bayesbay.samplers.VanillaSampler.html\n", "description": "Sampling the posterior by means of reversible-jump Markov chain Monte Carlo.", "children": []}, {"name": "ParallelTempering", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_bayes_bay.py", "link_doc": "https://bayes-bay.readthedocs.io/en/latest/api/generated/bayesbay.samplers.ParallelTempering.html\n", "description": "Sampling the posterior by means of reversible-jump Markov chain Monte Carlo accelerated with parallel tempering.", "children": []}, {"name": "SimulatedAnnealing", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_bayes_bay.py", "link_doc": "https://bayes-bay.readthedocs.io/en/latest/api/generated/bayesbay.samplers.SimulatedAnnealing.html\n", "description": "Sampling the posterior by means of reversible-jump Markov chain Monte Carlo accelerated with simulated annealing.", "children": []}]}]}, {"name": "McMC samplers", "link_git": null, "link_doc": null, "description": "Markov chain Monte Carlo (McMC) samplers are algorithms for generating samples from complex probability distributions, often used in Bayesian inference.", "examples": [{"name": "Non-linear Curve Fitting - nonlinear_curve_fitting.ipynb", "description": "Non-linear curve fitting", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/nonlinear_curve_fitting/nonlinear_curve_fitting.ipynb"}, {"name": "PyGIMLi ERT - pygimli_ert_toy_emcee_parallel.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_toy_emcee_parallel.py"}, {"name": "PyGIMLi ERT - pygimli_ert_toy_emcee.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_toy_emcee.py"}, {"name": "Linear Regression - linear_regression.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression.ipynb"}, {"name": "Linear Regression - linear_regression_sealevel.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_sealevel.ipynb"}, {"name": "Linear Regression - linear_regression_emcee_sampler.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_emcee_sampler.py"}, {"name": "Receiver Function Inversion - receiver_function_inversion.ipynb", "description": "We run inversion on a toy receiver function model with optimization and sampling in this example", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/receiver_function/receiver_function_inversion.ipynb"}], "children": [{"name": "emcee", "link_git": null, "link_doc": null, "description": null, "examples": [{"name": "Non-linear Curve Fitting - nonlinear_curve_fitting.ipynb", "description": "Non-linear curve fitting", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/nonlinear_curve_fitting/nonlinear_curve_fitting.ipynb"}, {"name": "PyGIMLi ERT - pygimli_ert_toy_emcee_parallel.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_toy_emcee_parallel.py"}, {"name": "PyGIMLi ERT - pygimli_ert_toy_emcee.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_toy_emcee.py"}, {"name": "Linear Regression - linear_regression.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression.ipynb"}, {"name": "Linear Regression - linear_regression_sealevel.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_sealevel.ipynb"}, {"name": "Linear Regression - linear_regression_emcee_sampler.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_emcee_sampler.py"}, {"name": "Receiver Function Inversion - receiver_function_inversion.ipynb", "description": "We run inversion on a toy receiver function model with optimization and sampling in this example", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/receiver_function/receiver_function_inversion.ipynb"}], "children": [{"name": "MHMove", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_emcee.py", "link_doc": "https://emcee.readthedocs.io/en/stable/user/moves/#emcee.moves.MHMove\n", "description": "A general Metropolis-Hastings proposal.", "children": []}, {"name": "GaussianMove", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_emcee.py", "link_doc": "https://emcee.readthedocs.io/en/stable/user/moves/#emcee.moves.GaussianMove\n", "description": "A Metropolis step with a Gaussian proposal function.", "children": []}, {"name": "RedBlueMove", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_emcee.py", "link_doc": "https://emcee.readthedocs.io/en/stable/user/moves/#emcee.moves.RedBlueMove\n", "description": "An abstract red-blue ensemble move with parallelization as described in Foreman-Mackey et al. (2013).", "children": []}, {"name": "StretchMove", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_emcee.py", "link_doc": "https://emcee.readthedocs.io/en/stable/user/moves/#emcee.moves.StretchMove\n", "description": "A Goodman & Weare (2010) \u201cstretch move\u201d with parallelization as described in Foreman-Mackey et al. (2013).", "examples": [{"name": "Non-linear Curve Fitting - nonlinear_curve_fitting.ipynb", "description": "Non-linear curve fitting", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/nonlinear_curve_fitting/nonlinear_curve_fitting.ipynb"}, {"name": "PyGIMLi ERT - pygimli_ert_toy_emcee_parallel.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_toy_emcee_parallel.py"}, {"name": "PyGIMLi ERT - pygimli_ert_toy_emcee.py", "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_toy_emcee.py"}, {"name": "Linear Regression - linear_regression.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression.ipynb"}, {"name": "Linear Regression - linear_regression_sealevel.ipynb", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_sealevel.ipynb"}, {"name": "Linear Regression - linear_regression_emcee_sampler.py", "description": "Linear regression problem solved by linear solver, optimizer and sampler", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_emcee_sampler.py"}, {"name": "Receiver Function Inversion - receiver_function_inversion.ipynb", "description": "We run inversion on a toy receiver function model with optimization and sampling in this example", "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/receiver_function/receiver_function_inversion.ipynb"}], "children": []}, {"name": "WalkMove", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_emcee.py", "link_doc": "https://emcee.readthedocs.io/en/stable/user/moves/#emcee.moves.WalkMove\n", "description": "A Goodman & Weare (2010) \u201cwalk move\u201d with parallelization as described in Foreman-Mackey et al. (2013).", "children": []}, {"name": "KDEMove", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_emcee.py", "link_doc": "https://emcee.readthedocs.io/en/stable/user/moves/#emcee.moves.KDEMove\n", "description": "A proposal using a KDE of the complementary ensemble.", "children": []}, {"name": "DEMove", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_emcee.py", "link_doc": "https://emcee.readthedocs.io/en/stable/user/moves/#emcee.moves.DEMove\n", "description": "A proposal using differential evolution.", "children": []}, {"name": "DESnookerMove", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_emcee.py", "link_doc": "https://emcee.readthedocs.io/en/stable/user/moves/#emcee.moves.DESnookerMove\n", "description": "A snooker proposal using differential evolution.", "children": []}]}]}]}, {"name": "Direct search", "link_git": null, "link_doc": null, "description": "In the context of ensemble methods, direct search involves a search of the parameter space, e.g. to reduce a data misfit function, without requiring gradient information, These typically make use of exploration of the space and exploitation of previous sampling to guide search.", "children": [{"name": "Monte Carlo", "link_git": null, "link_doc": null, "description": "Monte Carlo methods use random sampling to obtain numerical results for problems that might be deterministic in principle.", "children": [{"name": "cofi.border_collie_optimization", "link_git": null, "link_doc": null, "description": null, "children": [{"name": "Border Collie Optimization Algorithm", "link_git": "https://github.com/inlab-geo/cofi/blob/main/src/cofi/tools/_cofi_border_collie_optimization.py", "link_doc": "https://ieeexplore.ieee.org/document/9106341\n", "description": "Implementation of a Border Collie Optimization Algorithm, based on the concepts and equations given in Dutta et al., IEEE Access, 2020.", "children": []}]}]}]}]}]}