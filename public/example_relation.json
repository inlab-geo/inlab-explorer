{
  "name": "CoFI Examples",
  "link_git": null,
  "link_doc": null,
  "description": null,
  "examples": [
    {
      "name": "pygimli_dcip.ipynb",
      "description": "DCIP inversion for a synthetic test problem",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip.ipynb"
    },
    {
      "name": "pygimli_dcip_century_tri_mesh.ipynb",
      "description": "DCIP inversion for the Century Deposit",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip_century_tri_mesh.ipynb"
    },
    {
      "name": "sw_tomography.ipynb",
      "description": "We map surface-wave velocity across the continental USA by solving a 2-D tomography problem through different approaches (regularised least-squares and trans-dimensional sampling)",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/sw_tomography/sw_tomography.ipynb"
    },
    {
      "name": "nonlinear_curve_fitting.ipynb",
      "description": "We solve a synthetic non-linear curve fitting problem in a deterministic setting (using Levenberg-Marquardt) and a probabilistic setting (using the stretch move in an affine-invariant sampler)",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/nonlinear_curve_fitting/nonlinear_curve_fitting.ipynb"
    },
    {
      "name": "receiver_function_inversion.ipynb",
      "description": "We invert a synthetic receiver function for the 1-D Vs structure using both optimization and sampling",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/receiver_function/receiver_function_inversion.ipynb"
    },
    {
      "name": "linear_regression.ipynb",
      "description": "Demonstrates polynomial curve fitting with matrix based linear solver, scipy optimisation of a misfit, and Bayesian sampling of a posterior PDF.",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression.ipynb"
    },
    {
      "name": "linear_regression_sealevel.ipynb",
      "description": "Demonstrates polynomial curve fitting of a real Sea level dataset using a matrix based linear solver, scipy optimisation of a misfit, and Bayesian sampling of a posterior PDF, with user challenges.",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_sealevel.ipynb"
    },
    {
      "name": "linear_regression_emcee_sampler.py",
      "description": "Script demonstrating Bayesian sampling with emcee in a simple polynomial regression problem.",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_emcee_sampler.py"
    },
    {
      "name": "linear_regression_linear_system_solver.py",
      "description": "Script demonstrating (local) matrix based solver for a simple polynomial regression problem.",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_linear_system_solver.py"
    },
    {
      "name": "linear_regression_linear_system_general.py",
      "description": "Script demonstrating scipy Least Squares matrix based solver for a simple polynomial regression problem.",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_linear_system_general.py"
    },
    {
      "name": "linear_regression_optimizer_lstsq.py",
      "description": "Linear regression problem solved by linear solver, optimizer and sampler",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_optimizer_lstsq.py"
    },
    {
      "name": "linear_regression_optimizer_minimize.py",
      "description": "Linear regression problem solved by linear solver, optimizer and sampler",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_optimizer_minimize.py"
    },
    {
      "name": "linear_regression_pytorch_optim.py",
      "description": "Linear regression problem solved by linear solver, optimizer and sampler",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_pytorch_optim.py"
    },
    {
      "name": "Partition_modelling_sealevel_bayesbay.ipynb",
      "description": "Fitting a partition model to Eustatic Sea-level heights using trans-D Bayesian partition modelling",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/partition_modelling/Partition_modelling_sealevel_bayesbay.ipynb"
    },
    {
      "name": "fmm_tomography.ipynb",
      "description": "Uses a simple matrix solver to perform regularised iterative inversion of a 2D travel time tomography problem in Cartesian co-ordinates.",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography.ipynb"
    },
    {
      "name": "fmm_tomography_regularization_discussion.ipynb",
      "description": "Uses a simple matrix solver to perform smoothing, flattening and damping regularised iterative inversion of a 2D travel time tomography problem in Cartesian co-ordinates.",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_regularization_discussion.ipynb"
    },
    {
      "name": "fmm_tomography_gaussian_prior_scipy_opt.py",
      "description": "Uses scipy conjugate gradients to iteratively minimise a least squares travel time objective function with a spatial Gaussian prior regularisation in a Cartesian 2D travel time tomography problem.",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_gaussian_prior_scipy_opt.py"
    },
    {
      "name": "fmm_tomography_simple_newton.py",
      "description": "Uses simple Newton matrix solver to iteratively minimise a least squares travel time objective function with a smoothing, flattening or damping regularisation in a Cartesian 2D travel time tomography problem.",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_simple_newton.py"
    },
    {
      "name": "fmm_tomography_reg_scipy_optimiser.py",
      "description": "Uses scipy conjugate gradients to iteratively minimise a least squares travel time objective function with a smoothing, flattening or damping regularisation in a Cartesian 2D travel time tomography problem.",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_reg_scipy_optimiser.py"
    },
    {
      "name": "surface_wave_receiver_function_joint.ipynb",
      "description": "We jointly invert receiver-function and surface-wave velocity measurements for the 1-D Vs structure using different approaches (optimisation, fixed-dimensional sampling, and trans-dimensional sampling)",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/sw_rf_joint/surface_wave_receiver_function_joint.ipynb"
    },
    {
      "name": "sw_rf_joint_synthetic.ipynb",
      "description": "We jointly invert synthetic receiver-function and surface-wave velocity measurements for the 1-D Vs structure using different approaches (optimisation, fixed-dimensional sampling, and trans-dimensional sampling)",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/sw_rf_joint/sw_rf_joint_synthetic.ipynb"
    },
    {
      "name": "pygimli_ert.ipynb",
      "description": "Using the ERT solver provided by PyGIMLi, we use trust-exact proviced by SciPY to solve the corresponding inverse problem",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert.ipynb"
    },
    {
      "name": "pygimli_ert_rect_gauss_newton.py",
      "description": "Using the ERT solver provided by PyGIMLi, we use a Gauss Newton method to solve the inverse problem on a rectangular mesh",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_rect_gauss_newton.py"
    },
    {
      "name": "pygimli_ert_rect_scipy_min.py",
      "description": "Using the ERT solver provided by PyGIMLi, we use a Gauss Newton method to solve the inverse problem on a rectangular mesh",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_rect_scipy_min.py"
    },
    {
      "name": "pygimli_ert_toy_emcee_parallel.py",
      "description": "Using the ERT solver provided by PyGIMLi, we try using emcee to solve inverse problem in parallel",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_toy_emcee_parallel.py"
    },
    {
      "name": "pygimli_ert_toy_emcee.py",
      "description": "Using the ERT solver provided by PyGIMLi, we try using emcee to solve inverse problem",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_toy_emcee.py"
    },
    {
      "name": "pygimli_ert_tri_gauss_newton.py",
      "description": "Using the ERT solver provided by PyGIMLi, we use a Gauss Newton method to solve the inverse problem on a triangular mesh",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_gauss_newton.py"
    },
    {
      "name": "pygimli_ert_tri_scipy_min.py",
      "description": "Using the ERT solver provided by PyGIMLi, we use a Trust region method to solve the inverse problem on a triangular mesh",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_scipy_min.py"
    },
    {
      "name": "pygimli_ert_tri_torch_optim.py",
      "description": "Using the ERT solver provided by PyGIMLi, we use a LBFGS to solve the inverse problem on a triangular mesh",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_torch_optim.py"
    },
    {
      "name": "modified_himmelblau.ipynb",
      "description": "Finding the global minimum of a modified Himmelblau function",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/test_functions_for_optimization/modified_himmelblau.ipynb"
    },
    {
      "name": "xray_tomography.ipynb",
      "description": "We look at a linear inverse problem based on Xray Tomography",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/xray_tomography/xray_tomography.ipynb"
    },
    {
      "name": "xray_tomography_linear_solver.py",
      "description": "We look at a linear inverse problem based on Xray Tomography",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/xray_tomography/xray_tomography_linear_solver.py"
    }
  ],
  "tutorials": [
    {
      "name": "electrical_resistivity_tomography.ipynb",
      "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/electrical_resistivity_tomography/electrical_resistivity_tomography.ipynb"
    },
    {
      "name": "1D_rayleigh_wave_phase_velocity_inversion.ipynb",
      "description": "We utlise CoFI to run optimsiation, fixed-dimensional sampling and trans-dimensional sampling on a surface wave dispersion curve inversion problem",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/rayleigh_wave_phase_velocity/1D_rayleigh_wave_phase_velocity_inversion.ipynb"
    },
    {
      "name": "linear_regression.ipynb",
      "description": "Linear regression problem solved by linear solver, optimizer and sampler",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/linear_regression/linear_regression.ipynb"
    },
    {
      "name": "thin_plate_inversion.ipynb",
      "description": "Using the forward solver provided by P223 and CoFI to invert for a thin plate target",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/thin_plate_inversion/thin_plate_inversion.ipynb"
    },
    {
      "name": "travel_time_tomography.ipynb",
      "description": "Seismic wave tomography via fast marching method",
      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/travel_time_tomography/travel_time_tomography.ipynb"
    }
  ],
  "children": [
    {
      "name": "EARTH SCIENCES",
      "link_git": null,
      "link_doc": null,
      "description": null,
      "examples": [
        {
          "name": "pygimli_dcip.ipynb",
          "description": "DCIP inversion for a synthetic test problem",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip.ipynb"
        },
        {
          "name": "pygimli_dcip_century_tri_mesh.ipynb",
          "description": "DCIP inversion for the Century Deposit",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip_century_tri_mesh.ipynb"
        },
        {
          "name": "sw_tomography.ipynb",
          "description": "We map surface-wave velocity across the continental USA by solving a 2-D tomography problem through different approaches (regularised least-squares and trans-dimensional sampling)",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/sw_tomography/sw_tomography.ipynb"
        },
        {
          "name": "receiver_function_inversion.ipynb",
          "description": "We invert a synthetic receiver function for the 1-D Vs structure using both optimization and sampling",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/receiver_function/receiver_function_inversion.ipynb"
        },
        {
          "name": "Partition_modelling_sealevel_bayesbay.ipynb",
          "description": "Fitting a partition model to Eustatic Sea-level heights using trans-D Bayesian partition modelling",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/partition_modelling/Partition_modelling_sealevel_bayesbay.ipynb"
        },
        {
          "name": "fmm_tomography.ipynb",
          "description": "Uses a simple matrix solver to perform regularised iterative inversion of a 2D travel time tomography problem in Cartesian co-ordinates.",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography.ipynb"
        },
        {
          "name": "fmm_tomography_regularization_discussion.ipynb",
          "description": "Uses a simple matrix solver to perform smoothing, flattening and damping regularised iterative inversion of a 2D travel time tomography problem in Cartesian co-ordinates.",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_regularization_discussion.ipynb"
        },
        {
          "name": "fmm_tomography_gaussian_prior_scipy_opt.py",
          "description": "Uses scipy conjugate gradients to iteratively minimise a least squares travel time objective function with a spatial Gaussian prior regularisation in a Cartesian 2D travel time tomography problem.",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_gaussian_prior_scipy_opt.py"
        },
        {
          "name": "fmm_tomography_simple_newton.py",
          "description": "Uses simple Newton matrix solver to iteratively minimise a least squares travel time objective function with a smoothing, flattening or damping regularisation in a Cartesian 2D travel time tomography problem.",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_simple_newton.py"
        },
        {
          "name": "fmm_tomography_reg_scipy_optimiser.py",
          "description": "Uses scipy conjugate gradients to iteratively minimise a least squares travel time objective function with a smoothing, flattening or damping regularisation in a Cartesian 2D travel time tomography problem.",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_reg_scipy_optimiser.py"
        },
        {
          "name": "surface_wave_receiver_function_joint.ipynb",
          "description": "We jointly invert receiver-function and surface-wave velocity measurements for the 1-D Vs structure using different approaches (optimisation, fixed-dimensional sampling, and trans-dimensional sampling)",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/sw_rf_joint/surface_wave_receiver_function_joint.ipynb"
        },
        {
          "name": "sw_rf_joint_synthetic.ipynb",
          "description": "We jointly invert synthetic receiver-function and surface-wave velocity measurements for the 1-D Vs structure using different approaches (optimisation, fixed-dimensional sampling, and trans-dimensional sampling)",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/sw_rf_joint/sw_rf_joint_synthetic.ipynb"
        },
        {
          "name": "pygimli_ert.ipynb",
          "description": "Using the ERT solver provided by PyGIMLi, we use trust-exact proviced by SciPY to solve the corresponding inverse problem",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert.ipynb"
        },
        {
          "name": "pygimli_ert_rect_gauss_newton.py",
          "description": "Using the ERT solver provided by PyGIMLi, we use a Gauss Newton method to solve the inverse problem on a rectangular mesh",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_rect_gauss_newton.py"
        },
        {
          "name": "pygimli_ert_rect_scipy_min.py",
          "description": "Using the ERT solver provided by PyGIMLi, we use a Gauss Newton method to solve the inverse problem on a rectangular mesh",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_rect_scipy_min.py"
        },
        {
          "name": "pygimli_ert_toy_emcee_parallel.py",
          "description": "Using the ERT solver provided by PyGIMLi, we try using emcee to solve inverse problem in parallel",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_toy_emcee_parallel.py"
        },
        {
          "name": "pygimli_ert_toy_emcee.py",
          "description": "Using the ERT solver provided by PyGIMLi, we try using emcee to solve inverse problem",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_toy_emcee.py"
        },
        {
          "name": "pygimli_ert_tri_gauss_newton.py",
          "description": "Using the ERT solver provided by PyGIMLi, we use a Gauss Newton method to solve the inverse problem on a triangular mesh",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_gauss_newton.py"
        },
        {
          "name": "pygimli_ert_tri_scipy_min.py",
          "description": "Using the ERT solver provided by PyGIMLi, we use a Trust region method to solve the inverse problem on a triangular mesh",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_scipy_min.py"
        },
        {
          "name": "pygimli_ert_tri_torch_optim.py",
          "description": "Using the ERT solver provided by PyGIMLi, we use a LBFGS to solve the inverse problem on a triangular mesh",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_torch_optim.py"
        },
        {
          "name": "xray_tomography.ipynb",
          "description": "We look at a linear inverse problem based on Xray Tomography",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/xray_tomography/xray_tomography.ipynb"
        },
        {
          "name": "xray_tomography_linear_solver.py",
          "description": "We look at a linear inverse problem based on Xray Tomography",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/xray_tomography/xray_tomography_linear_solver.py"
        }
      ],
      "tutorials": [
        {
          "name": "electrical_resistivity_tomography.ipynb",
          "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/electrical_resistivity_tomography/electrical_resistivity_tomography.ipynb"
        },
        {
          "name": "1D_rayleigh_wave_phase_velocity_inversion.ipynb",
          "description": "We utlise CoFI to run optimsiation, fixed-dimensional sampling and trans-dimensional sampling on a surface wave dispersion curve inversion problem",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/rayleigh_wave_phase_velocity/1D_rayleigh_wave_phase_velocity_inversion.ipynb"
        },
        {
          "name": "thin_plate_inversion.ipynb",
          "description": "Using the forward solver provided by P223 and CoFI to invert for a thin plate target",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/thin_plate_inversion/thin_plate_inversion.ipynb"
        },
        {
          "name": "travel_time_tomography.ipynb",
          "description": "Seismic wave tomography via fast marching method",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/travel_time_tomography/travel_time_tomography.ipynb"
        }
      ],
      "children": [
        {
          "name": "Geophysics",
          "link_git": null,
          "link_doc": null,
          "description": null,
          "examples": [
            {
              "name": "pygimli_dcip.ipynb",
              "description": "DCIP inversion for a synthetic test problem",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip.ipynb"
            },
            {
              "name": "pygimli_dcip_century_tri_mesh.ipynb",
              "description": "DCIP inversion for the Century Deposit",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip_century_tri_mesh.ipynb"
            },
            {
              "name": "sw_tomography.ipynb",
              "description": "We map surface-wave velocity across the continental USA by solving a 2-D tomography problem through different approaches (regularised least-squares and trans-dimensional sampling)",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/sw_tomography/sw_tomography.ipynb"
            },
            {
              "name": "receiver_function_inversion.ipynb",
              "description": "We invert a synthetic receiver function for the 1-D Vs structure using both optimization and sampling",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/receiver_function/receiver_function_inversion.ipynb"
            },
            {
              "name": "Partition_modelling_sealevel_bayesbay.ipynb",
              "description": "Fitting a partition model to Eustatic Sea-level heights using trans-D Bayesian partition modelling",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/partition_modelling/Partition_modelling_sealevel_bayesbay.ipynb"
            },
            {
              "name": "fmm_tomography.ipynb",
              "description": "Uses a simple matrix solver to perform regularised iterative inversion of a 2D travel time tomography problem in Cartesian co-ordinates.",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography.ipynb"
            },
            {
              "name": "fmm_tomography_regularization_discussion.ipynb",
              "description": "Uses a simple matrix solver to perform smoothing, flattening and damping regularised iterative inversion of a 2D travel time tomography problem in Cartesian co-ordinates.",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_regularization_discussion.ipynb"
            },
            {
              "name": "fmm_tomography_gaussian_prior_scipy_opt.py",
              "description": "Uses scipy conjugate gradients to iteratively minimise a least squares travel time objective function with a spatial Gaussian prior regularisation in a Cartesian 2D travel time tomography problem.",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_gaussian_prior_scipy_opt.py"
            },
            {
              "name": "fmm_tomography_simple_newton.py",
              "description": "Uses simple Newton matrix solver to iteratively minimise a least squares travel time objective function with a smoothing, flattening or damping regularisation in a Cartesian 2D travel time tomography problem.",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_simple_newton.py"
            },
            {
              "name": "fmm_tomography_reg_scipy_optimiser.py",
              "description": "Uses scipy conjugate gradients to iteratively minimise a least squares travel time objective function with a smoothing, flattening or damping regularisation in a Cartesian 2D travel time tomography problem.",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_reg_scipy_optimiser.py"
            },
            {
              "name": "surface_wave_receiver_function_joint.ipynb",
              "description": "We jointly invert receiver-function and surface-wave velocity measurements for the 1-D Vs structure using different approaches (optimisation, fixed-dimensional sampling, and trans-dimensional sampling)",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/sw_rf_joint/surface_wave_receiver_function_joint.ipynb"
            },
            {
              "name": "sw_rf_joint_synthetic.ipynb",
              "description": "We jointly invert synthetic receiver-function and surface-wave velocity measurements for the 1-D Vs structure using different approaches (optimisation, fixed-dimensional sampling, and trans-dimensional sampling)",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/sw_rf_joint/sw_rf_joint_synthetic.ipynb"
            },
            {
              "name": "pygimli_ert.ipynb",
              "description": "Using the ERT solver provided by PyGIMLi, we use trust-exact proviced by SciPY to solve the corresponding inverse problem",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert.ipynb"
            },
            {
              "name": "pygimli_ert_rect_gauss_newton.py",
              "description": "Using the ERT solver provided by PyGIMLi, we use a Gauss Newton method to solve the inverse problem on a rectangular mesh",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_rect_gauss_newton.py"
            },
            {
              "name": "pygimli_ert_rect_scipy_min.py",
              "description": "Using the ERT solver provided by PyGIMLi, we use a Gauss Newton method to solve the inverse problem on a rectangular mesh",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_rect_scipy_min.py"
            },
            {
              "name": "pygimli_ert_toy_emcee_parallel.py",
              "description": "Using the ERT solver provided by PyGIMLi, we try using emcee to solve inverse problem in parallel",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_toy_emcee_parallel.py"
            },
            {
              "name": "pygimli_ert_toy_emcee.py",
              "description": "Using the ERT solver provided by PyGIMLi, we try using emcee to solve inverse problem",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_toy_emcee.py"
            },
            {
              "name": "pygimli_ert_tri_gauss_newton.py",
              "description": "Using the ERT solver provided by PyGIMLi, we use a Gauss Newton method to solve the inverse problem on a triangular mesh",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_gauss_newton.py"
            },
            {
              "name": "pygimli_ert_tri_scipy_min.py",
              "description": "Using the ERT solver provided by PyGIMLi, we use a Trust region method to solve the inverse problem on a triangular mesh",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_scipy_min.py"
            },
            {
              "name": "pygimli_ert_tri_torch_optim.py",
              "description": "Using the ERT solver provided by PyGIMLi, we use a LBFGS to solve the inverse problem on a triangular mesh",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_torch_optim.py"
            },
            {
              "name": "xray_tomography.ipynb",
              "description": "We look at a linear inverse problem based on Xray Tomography",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/xray_tomography/xray_tomography.ipynb"
            },
            {
              "name": "xray_tomography_linear_solver.py",
              "description": "We look at a linear inverse problem based on Xray Tomography",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/xray_tomography/xray_tomography_linear_solver.py"
            }
          ],
          "tutorials": [
            {
              "name": "electrical_resistivity_tomography.ipynb",
              "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/electrical_resistivity_tomography/electrical_resistivity_tomography.ipynb"
            },
            {
              "name": "1D_rayleigh_wave_phase_velocity_inversion.ipynb",
              "description": "We utlise CoFI to run optimsiation, fixed-dimensional sampling and trans-dimensional sampling on a surface wave dispersion curve inversion problem",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/rayleigh_wave_phase_velocity/1D_rayleigh_wave_phase_velocity_inversion.ipynb"
            },
            {
              "name": "thin_plate_inversion.ipynb",
              "description": "Using the forward solver provided by P223 and CoFI to invert for a thin plate target",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/thin_plate_inversion/thin_plate_inversion.ipynb"
            },
            {
              "name": "travel_time_tomography.ipynb",
              "description": "Seismic wave tomography via fast marching method",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/travel_time_tomography/travel_time_tomography.ipynb"
            }
          ],
          "children": [
            {
              "name": "Electrical and electromagnetic methods in geophysics",
              "link_git": null,
              "link_doc": null,
              "description": null,
              "examples": [
                {
                  "name": "pygimli_dcip.ipynb",
                  "description": "DCIP inversion for a synthetic test problem",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip.ipynb"
                },
                {
                  "name": "pygimli_dcip_century_tri_mesh.ipynb",
                  "description": "DCIP inversion for the Century Deposit",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip_century_tri_mesh.ipynb"
                },
                {
                  "name": "pygimli_ert.ipynb",
                  "description": "Using the ERT solver provided by PyGIMLi, we use trust-exact proviced by SciPY to solve the corresponding inverse problem",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert.ipynb"
                },
                {
                  "name": "pygimli_ert_rect_gauss_newton.py",
                  "description": "Using the ERT solver provided by PyGIMLi, we use a Gauss Newton method to solve the inverse problem on a rectangular mesh",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_rect_gauss_newton.py"
                },
                {
                  "name": "pygimli_ert_rect_scipy_min.py",
                  "description": "Using the ERT solver provided by PyGIMLi, we use a Gauss Newton method to solve the inverse problem on a rectangular mesh",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_rect_scipy_min.py"
                },
                {
                  "name": "pygimli_ert_toy_emcee_parallel.py",
                  "description": "Using the ERT solver provided by PyGIMLi, we try using emcee to solve inverse problem in parallel",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_toy_emcee_parallel.py"
                },
                {
                  "name": "pygimli_ert_toy_emcee.py",
                  "description": "Using the ERT solver provided by PyGIMLi, we try using emcee to solve inverse problem",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_toy_emcee.py"
                },
                {
                  "name": "pygimli_ert_tri_gauss_newton.py",
                  "description": "Using the ERT solver provided by PyGIMLi, we use a Gauss Newton method to solve the inverse problem on a triangular mesh",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_gauss_newton.py"
                },
                {
                  "name": "pygimli_ert_tri_scipy_min.py",
                  "description": "Using the ERT solver provided by PyGIMLi, we use a Trust region method to solve the inverse problem on a triangular mesh",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_scipy_min.py"
                },
                {
                  "name": "pygimli_ert_tri_torch_optim.py",
                  "description": "Using the ERT solver provided by PyGIMLi, we use a LBFGS to solve the inverse problem on a triangular mesh",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_torch_optim.py"
                }
              ],
              "tutorials": [
                {
                  "name": "electrical_resistivity_tomography.ipynb",
                  "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/electrical_resistivity_tomography/electrical_resistivity_tomography.ipynb"
                },
                {
                  "name": "thin_plate_inversion.ipynb",
                  "description": "Using the forward solver provided by P223 and CoFI to invert for a thin plate target",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/thin_plate_inversion/thin_plate_inversion.ipynb"
                }
              ],
              "children": [
                {
                  "name": "Electrical",
                  "link_git": null,
                  "link_doc": null,
                  "description": null,
                  "examples": [
                    {
                      "name": "pygimli_dcip.ipynb",
                      "description": "DCIP inversion for a synthetic test problem",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip.ipynb"
                    },
                    {
                      "name": "pygimli_dcip_century_tri_mesh.ipynb",
                      "description": "DCIP inversion for the Century Deposit",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip_century_tri_mesh.ipynb"
                    },
                    {
                      "name": "pygimli_ert.ipynb",
                      "description": "Using the ERT solver provided by PyGIMLi, we use trust-exact proviced by SciPY to solve the corresponding inverse problem",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert.ipynb"
                    },
                    {
                      "name": "pygimli_ert_rect_gauss_newton.py",
                      "description": "Using the ERT solver provided by PyGIMLi, we use a Gauss Newton method to solve the inverse problem on a rectangular mesh",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_rect_gauss_newton.py"
                    },
                    {
                      "name": "pygimli_ert_rect_scipy_min.py",
                      "description": "Using the ERT solver provided by PyGIMLi, we use a Gauss Newton method to solve the inverse problem on a rectangular mesh",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_rect_scipy_min.py"
                    },
                    {
                      "name": "pygimli_ert_toy_emcee_parallel.py",
                      "description": "Using the ERT solver provided by PyGIMLi, we try using emcee to solve inverse problem in parallel",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_toy_emcee_parallel.py"
                    },
                    {
                      "name": "pygimli_ert_toy_emcee.py",
                      "description": "Using the ERT solver provided by PyGIMLi, we try using emcee to solve inverse problem",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_toy_emcee.py"
                    },
                    {
                      "name": "pygimli_ert_tri_gauss_newton.py",
                      "description": "Using the ERT solver provided by PyGIMLi, we use a Gauss Newton method to solve the inverse problem on a triangular mesh",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_gauss_newton.py"
                    },
                    {
                      "name": "pygimli_ert_tri_scipy_min.py",
                      "description": "Using the ERT solver provided by PyGIMLi, we use a Trust region method to solve the inverse problem on a triangular mesh",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_scipy_min.py"
                    },
                    {
                      "name": "pygimli_ert_tri_torch_optim.py",
                      "description": "Using the ERT solver provided by PyGIMLi, we use a LBFGS to solve the inverse problem on a triangular mesh",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_torch_optim.py"
                    }
                  ],
                  "tutorials": [
                    {
                      "name": "electrical_resistivity_tomography.ipynb",
                      "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/electrical_resistivity_tomography/electrical_resistivity_tomography.ipynb"
                    }
                  ],
                  "children": [
                    {
                      "name": "Direct current, induced polarization",
                      "link_git": null,
                      "link_doc": null,
                      "description": null,
                      "examples": [
                        {
                          "name": "pygimli_dcip.ipynb",
                          "description": "DCIP inversion for a synthetic test problem",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip.ipynb"
                        },
                        {
                          "name": "pygimli_dcip_century_tri_mesh.ipynb",
                          "description": "DCIP inversion for the Century Deposit",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_dcip/pygimli_dcip_century_tri_mesh.ipynb"
                        }
                      ],
                      "children": []
                    },
                    {
                      "name": "Electrical resistivity tomography",
                      "link_git": null,
                      "link_doc": null,
                      "description": null,
                      "examples": [
                        {
                          "name": "pygimli_ert.ipynb",
                          "description": "Using the ERT solver provided by PyGIMLi, we use trust-exact proviced by SciPY to solve the corresponding inverse problem",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert.ipynb"
                        },
                        {
                          "name": "pygimli_ert_rect_gauss_newton.py",
                          "description": "Using the ERT solver provided by PyGIMLi, we use a Gauss Newton method to solve the inverse problem on a rectangular mesh",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_rect_gauss_newton.py"
                        },
                        {
                          "name": "pygimli_ert_rect_scipy_min.py",
                          "description": "Using the ERT solver provided by PyGIMLi, we use a Gauss Newton method to solve the inverse problem on a rectangular mesh",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_rect_scipy_min.py"
                        },
                        {
                          "name": "pygimli_ert_toy_emcee_parallel.py",
                          "description": "Using the ERT solver provided by PyGIMLi, we try using emcee to solve inverse problem in parallel",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_toy_emcee_parallel.py"
                        },
                        {
                          "name": "pygimli_ert_toy_emcee.py",
                          "description": "Using the ERT solver provided by PyGIMLi, we try using emcee to solve inverse problem",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_toy_emcee.py"
                        },
                        {
                          "name": "pygimli_ert_tri_gauss_newton.py",
                          "description": "Using the ERT solver provided by PyGIMLi, we use a Gauss Newton method to solve the inverse problem on a triangular mesh",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_gauss_newton.py"
                        },
                        {
                          "name": "pygimli_ert_tri_scipy_min.py",
                          "description": "Using the ERT solver provided by PyGIMLi, we use a Trust region method to solve the inverse problem on a triangular mesh",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_scipy_min.py"
                        },
                        {
                          "name": "pygimli_ert_tri_torch_optim.py",
                          "description": "Using the ERT solver provided by PyGIMLi, we use a LBFGS to solve the inverse problem on a triangular mesh",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/pygimli_ert/pygimli_ert_tri_torch_optim.py"
                        }
                      ],
                      "tutorials": [
                        {
                          "name": "electrical_resistivity_tomography.ipynb",
                          "description": "Using the ERT solver provided by PyGIMLi, we use different CoFI solvers to solve the corresponding inverse problem",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/electrical_resistivity_tomography/electrical_resistivity_tomography.ipynb"
                        }
                      ],
                      "children": []
                    }
                  ]
                },
                {
                  "name": "Electromagnetic",
                  "link_git": null,
                  "link_doc": null,
                  "description": null,
                  "tutorials": [
                    {
                      "name": "thin_plate_inversion.ipynb",
                      "description": "Using the forward solver provided by P223 and CoFI to invert for a thin plate target",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/thin_plate_inversion/thin_plate_inversion.ipynb"
                    }
                  ],
                  "children": [
                    {
                      "name": "Thin plate approximation",
                      "link_git": null,
                      "link_doc": null,
                      "description": null,
                      "tutorials": [
                        {
                          "name": "thin_plate_inversion.ipynb",
                          "description": "Using the forward solver provided by P223 and CoFI to invert for a thin plate target",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/thin_plate_inversion/thin_plate_inversion.ipynb"
                        }
                      ],
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "name": "Seismology and seismic exploration",
              "link_git": null,
              "link_doc": null,
              "description": null,
              "examples": [
                {
                  "name": "sw_tomography.ipynb",
                  "description": "We map surface-wave velocity across the continental USA by solving a 2-D tomography problem through different approaches (regularised least-squares and trans-dimensional sampling)",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/sw_tomography/sw_tomography.ipynb"
                },
                {
                  "name": "receiver_function_inversion.ipynb",
                  "description": "We invert a synthetic receiver function for the 1-D Vs structure using both optimization and sampling",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/receiver_function/receiver_function_inversion.ipynb"
                },
                {
                  "name": "fmm_tomography.ipynb",
                  "description": "Uses a simple matrix solver to perform regularised iterative inversion of a 2D travel time tomography problem in Cartesian co-ordinates.",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography.ipynb"
                },
                {
                  "name": "fmm_tomography_regularization_discussion.ipynb",
                  "description": "Uses a simple matrix solver to perform smoothing, flattening and damping regularised iterative inversion of a 2D travel time tomography problem in Cartesian co-ordinates.",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_regularization_discussion.ipynb"
                },
                {
                  "name": "fmm_tomography_gaussian_prior_scipy_opt.py",
                  "description": "Uses scipy conjugate gradients to iteratively minimise a least squares travel time objective function with a spatial Gaussian prior regularisation in a Cartesian 2D travel time tomography problem.",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_gaussian_prior_scipy_opt.py"
                },
                {
                  "name": "fmm_tomography_simple_newton.py",
                  "description": "Uses simple Newton matrix solver to iteratively minimise a least squares travel time objective function with a smoothing, flattening or damping regularisation in a Cartesian 2D travel time tomography problem.",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_simple_newton.py"
                },
                {
                  "name": "fmm_tomography_reg_scipy_optimiser.py",
                  "description": "Uses scipy conjugate gradients to iteratively minimise a least squares travel time objective function with a smoothing, flattening or damping regularisation in a Cartesian 2D travel time tomography problem.",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_reg_scipy_optimiser.py"
                },
                {
                  "name": "surface_wave_receiver_function_joint.ipynb",
                  "description": "We jointly invert receiver-function and surface-wave velocity measurements for the 1-D Vs structure using different approaches (optimisation, fixed-dimensional sampling, and trans-dimensional sampling)",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/sw_rf_joint/surface_wave_receiver_function_joint.ipynb"
                },
                {
                  "name": "sw_rf_joint_synthetic.ipynb",
                  "description": "We jointly invert synthetic receiver-function and surface-wave velocity measurements for the 1-D Vs structure using different approaches (optimisation, fixed-dimensional sampling, and trans-dimensional sampling)",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/sw_rf_joint/sw_rf_joint_synthetic.ipynb"
                },
                {
                  "name": "xray_tomography.ipynb",
                  "description": "We look at a linear inverse problem based on Xray Tomography",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/xray_tomography/xray_tomography.ipynb"
                },
                {
                  "name": "xray_tomography_linear_solver.py",
                  "description": "We look at a linear inverse problem based on Xray Tomography",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/xray_tomography/xray_tomography_linear_solver.py"
                }
              ],
              "tutorials": [
                {
                  "name": "1D_rayleigh_wave_phase_velocity_inversion.ipynb",
                  "description": "We utlise CoFI to run optimsiation, fixed-dimensional sampling and trans-dimensional sampling on a surface wave dispersion curve inversion problem",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/rayleigh_wave_phase_velocity/1D_rayleigh_wave_phase_velocity_inversion.ipynb"
                },
                {
                  "name": "travel_time_tomography.ipynb",
                  "description": "Seismic wave tomography via fast marching method",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/travel_time_tomography/travel_time_tomography.ipynb"
                }
              ],
              "children": [
                {
                  "name": "Surface wave / ambient noise",
                  "link_git": null,
                  "link_doc": null,
                  "description": null,
                  "examples": [
                    {
                      "name": "sw_tomography.ipynb",
                      "description": "We map surface-wave velocity across the continental USA by solving a 2-D tomography problem through different approaches (regularised least-squares and trans-dimensional sampling)",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/sw_tomography/sw_tomography.ipynb"
                    }
                  ],
                  "children": [
                    {
                      "name": "Surface Wave Tomography",
                      "link_git": null,
                      "link_doc": null,
                      "description": null,
                      "examples": [
                        {
                          "name": "sw_tomography.ipynb",
                          "description": "We map surface-wave velocity across the continental USA by solving a 2-D tomography problem through different approaches (regularised least-squares and trans-dimensional sampling)",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/sw_tomography/sw_tomography.ipynb"
                        }
                      ],
                      "children": []
                    }
                  ]
                },
                {
                  "name": "Receiver function",
                  "link_git": null,
                  "link_doc": null,
                  "description": null,
                  "examples": [
                    {
                      "name": "receiver_function_inversion.ipynb",
                      "description": "We invert a synthetic receiver function for the 1-D Vs structure using both optimization and sampling",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/receiver_function/receiver_function_inversion.ipynb"
                    }
                  ],
                  "children": [
                    {
                      "name": "Receiver function inversion",
                      "link_git": null,
                      "link_doc": null,
                      "description": null,
                      "examples": [
                        {
                          "name": "receiver_function_inversion.ipynb",
                          "description": "We invert a synthetic receiver function for the 1-D Vs structure using both optimization and sampling",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/receiver_function/receiver_function_inversion.ipynb"
                        }
                      ],
                      "children": []
                    }
                  ]
                },
                {
                  "name": "Travel times",
                  "link_git": null,
                  "link_doc": null,
                  "description": null,
                  "examples": [
                    {
                      "name": "fmm_tomography.ipynb",
                      "description": "Uses a simple matrix solver to perform regularised iterative inversion of a 2D travel time tomography problem in Cartesian co-ordinates.",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography.ipynb"
                    },
                    {
                      "name": "fmm_tomography_regularization_discussion.ipynb",
                      "description": "Uses a simple matrix solver to perform smoothing, flattening and damping regularised iterative inversion of a 2D travel time tomography problem in Cartesian co-ordinates.",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_regularization_discussion.ipynb"
                    },
                    {
                      "name": "fmm_tomography_gaussian_prior_scipy_opt.py",
                      "description": "Uses scipy conjugate gradients to iteratively minimise a least squares travel time objective function with a spatial Gaussian prior regularisation in a Cartesian 2D travel time tomography problem.",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_gaussian_prior_scipy_opt.py"
                    },
                    {
                      "name": "fmm_tomography_simple_newton.py",
                      "description": "Uses simple Newton matrix solver to iteratively minimise a least squares travel time objective function with a smoothing, flattening or damping regularisation in a Cartesian 2D travel time tomography problem.",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_simple_newton.py"
                    },
                    {
                      "name": "fmm_tomography_reg_scipy_optimiser.py",
                      "description": "Uses scipy conjugate gradients to iteratively minimise a least squares travel time objective function with a smoothing, flattening or damping regularisation in a Cartesian 2D travel time tomography problem.",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_reg_scipy_optimiser.py"
                    },
                    {
                      "name": "xray_tomography.ipynb",
                      "description": "We look at a linear inverse problem based on Xray Tomography",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/xray_tomography/xray_tomography.ipynb"
                    },
                    {
                      "name": "xray_tomography_linear_solver.py",
                      "description": "We look at a linear inverse problem based on Xray Tomography",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/xray_tomography/xray_tomography_linear_solver.py"
                    }
                  ],
                  "tutorials": [
                    {
                      "name": "travel_time_tomography.ipynb",
                      "description": "Seismic wave tomography via fast marching method",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/travel_time_tomography/travel_time_tomography.ipynb"
                    }
                  ],
                  "children": [
                    {
                      "name": "Non-linear tomography",
                      "link_git": null,
                      "link_doc": null,
                      "description": null,
                      "examples": [
                        {
                          "name": "fmm_tomography.ipynb",
                          "description": "Uses a simple matrix solver to perform regularised iterative inversion of a 2D travel time tomography problem in Cartesian co-ordinates.",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography.ipynb"
                        },
                        {
                          "name": "fmm_tomography_regularization_discussion.ipynb",
                          "description": "Uses a simple matrix solver to perform smoothing, flattening and damping regularised iterative inversion of a 2D travel time tomography problem in Cartesian co-ordinates.",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_regularization_discussion.ipynb"
                        },
                        {
                          "name": "fmm_tomography_gaussian_prior_scipy_opt.py",
                          "description": "Uses scipy conjugate gradients to iteratively minimise a least squares travel time objective function with a spatial Gaussian prior regularisation in a Cartesian 2D travel time tomography problem.",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_gaussian_prior_scipy_opt.py"
                        },
                        {
                          "name": "fmm_tomography_simple_newton.py",
                          "description": "Uses simple Newton matrix solver to iteratively minimise a least squares travel time objective function with a smoothing, flattening or damping regularisation in a Cartesian 2D travel time tomography problem.",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_simple_newton.py"
                        },
                        {
                          "name": "fmm_tomography_reg_scipy_optimiser.py",
                          "description": "Uses scipy conjugate gradients to iteratively minimise a least squares travel time objective function with a smoothing, flattening or damping regularisation in a Cartesian 2D travel time tomography problem.",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/fmm_tomography/fmm_tomography_reg_scipy_optimiser.py"
                        }
                      ],
                      "tutorials": [
                        {
                          "name": "travel_time_tomography.ipynb",
                          "description": "Seismic wave tomography via fast marching method",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/travel_time_tomography/travel_time_tomography.ipynb"
                        }
                      ],
                      "children": []
                    },
                    {
                      "name": "Straight-ray tomography",
                      "link_git": null,
                      "link_doc": null,
                      "description": null,
                      "examples": [
                        {
                          "name": "xray_tomography.ipynb",
                          "description": "We look at a linear inverse problem based on Xray Tomography",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/xray_tomography/xray_tomography.ipynb"
                        },
                        {
                          "name": "xray_tomography_linear_solver.py",
                          "description": "We look at a linear inverse problem based on Xray Tomography",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/xray_tomography/xray_tomography_linear_solver.py"
                        }
                      ],
                      "children": []
                    }
                  ]
                },
                {
                  "name": "Joint inversion",
                  "link_git": null,
                  "link_doc": null,
                  "description": null,
                  "examples": [
                    {
                      "name": "surface_wave_receiver_function_joint.ipynb",
                      "description": "We jointly invert receiver-function and surface-wave velocity measurements for the 1-D Vs structure using different approaches (optimisation, fixed-dimensional sampling, and trans-dimensional sampling)",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/sw_rf_joint/surface_wave_receiver_function_joint.ipynb"
                    },
                    {
                      "name": "sw_rf_joint_synthetic.ipynb",
                      "description": "We jointly invert synthetic receiver-function and surface-wave velocity measurements for the 1-D Vs structure using different approaches (optimisation, fixed-dimensional sampling, and trans-dimensional sampling)",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/sw_rf_joint/sw_rf_joint_synthetic.ipynb"
                    }
                  ],
                  "tutorials": [
                    {
                      "name": "1D_rayleigh_wave_phase_velocity_inversion.ipynb",
                      "description": "We utlise CoFI to run optimsiation, fixed-dimensional sampling and trans-dimensional sampling on a surface wave dispersion curve inversion problem",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/rayleigh_wave_phase_velocity/1D_rayleigh_wave_phase_velocity_inversion.ipynb"
                    }
                  ],
                  "children": [
                    {
                      "name": "Surface wave dispersion and receiver function",
                      "link_git": null,
                      "link_doc": null,
                      "description": null,
                      "examples": [
                        {
                          "name": "surface_wave_receiver_function_joint.ipynb",
                          "description": "We jointly invert receiver-function and surface-wave velocity measurements for the 1-D Vs structure using different approaches (optimisation, fixed-dimensional sampling, and trans-dimensional sampling)",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/sw_rf_joint/surface_wave_receiver_function_joint.ipynb"
                        },
                        {
                          "name": "sw_rf_joint_synthetic.ipynb",
                          "description": "We jointly invert synthetic receiver-function and surface-wave velocity measurements for the 1-D Vs structure using different approaches (optimisation, fixed-dimensional sampling, and trans-dimensional sampling)",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/sw_rf_joint/sw_rf_joint_synthetic.ipynb"
                        }
                      ],
                      "tutorials": [
                        {
                          "name": "1D_rayleigh_wave_phase_velocity_inversion.ipynb",
                          "description": "We utlise CoFI to run optimsiation, fixed-dimensional sampling and trans-dimensional sampling on a surface wave dispersion curve inversion problem",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/rayleigh_wave_phase_velocity/1D_rayleigh_wave_phase_velocity_inversion.ipynb"
                        }
                      ],
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "name": " Geodynamics",
              "link_git": null,
              "link_doc": null,
              "description": null,
              "examples": [
                {
                  "name": "Partition_modelling_sealevel_bayesbay.ipynb",
                  "description": "Fitting a partition model to Eustatic Sea-level heights using trans-D Bayesian partition modelling",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/partition_modelling/Partition_modelling_sealevel_bayesbay.ipynb"
                }
              ],
              "children": [
                {
                  "name": "Eustatic Sealevel changes",
                  "link_git": null,
                  "link_doc": null,
                  "description": null,
                  "examples": [
                    {
                      "name": "Partition_modelling_sealevel_bayesbay.ipynb",
                      "description": "Fitting a partition model to Eustatic Sea-level heights using trans-D Bayesian partition modelling",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/partition_modelling/Partition_modelling_sealevel_bayesbay.ipynb"
                    }
                  ],
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "MATHEMATICAL SCIENCES",
      "link_git": null,
      "link_doc": null,
      "description": null,
      "examples": [
        {
          "name": "nonlinear_curve_fitting.ipynb",
          "description": "We solve a synthetic non-linear curve fitting problem in a deterministic setting (using Levenberg-Marquardt) and a probabilistic setting (using the stretch move in an affine-invariant sampler)",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/nonlinear_curve_fitting/nonlinear_curve_fitting.ipynb"
        },
        {
          "name": "linear_regression.ipynb",
          "description": "Demonstrates polynomial curve fitting with matrix based linear solver, scipy optimisation of a misfit, and Bayesian sampling of a posterior PDF.",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression.ipynb"
        },
        {
          "name": "linear_regression_sealevel.ipynb",
          "description": "Demonstrates polynomial curve fitting of a real Sea level dataset using a matrix based linear solver, scipy optimisation of a misfit, and Bayesian sampling of a posterior PDF, with user challenges.",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_sealevel.ipynb"
        },
        {
          "name": "linear_regression_emcee_sampler.py",
          "description": "Script demonstrating Bayesian sampling with emcee in a simple polynomial regression problem.",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_emcee_sampler.py"
        },
        {
          "name": "linear_regression_linear_system_solver.py",
          "description": "Script demonstrating (local) matrix based solver for a simple polynomial regression problem.",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_linear_system_solver.py"
        },
        {
          "name": "linear_regression_linear_system_general.py",
          "description": "Script demonstrating scipy Least Squares matrix based solver for a simple polynomial regression problem.",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_linear_system_general.py"
        },
        {
          "name": "linear_regression_optimizer_lstsq.py",
          "description": "Linear regression problem solved by linear solver, optimizer and sampler",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_optimizer_lstsq.py"
        },
        {
          "name": "linear_regression_optimizer_minimize.py",
          "description": "Linear regression problem solved by linear solver, optimizer and sampler",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_optimizer_minimize.py"
        },
        {
          "name": "linear_regression_pytorch_optim.py",
          "description": "Linear regression problem solved by linear solver, optimizer and sampler",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_pytorch_optim.py"
        },
        {
          "name": "modified_himmelblau.ipynb",
          "description": "Finding the global minimum of a modified Himmelblau function",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/test_functions_for_optimization/modified_himmelblau.ipynb"
        }
      ],
      "tutorials": [
        {
          "name": "linear_regression.ipynb",
          "description": "Linear regression problem solved by linear solver, optimizer and sampler",
          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/linear_regression/linear_regression.ipynb"
        }
      ],
      "children": [
        {
          "name": "Statistics",
          "link_git": null,
          "link_doc": null,
          "description": null,
          "examples": [
            {
              "name": "nonlinear_curve_fitting.ipynb",
              "description": "We solve a synthetic non-linear curve fitting problem in a deterministic setting (using Levenberg-Marquardt) and a probabilistic setting (using the stretch move in an affine-invariant sampler)",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/nonlinear_curve_fitting/nonlinear_curve_fitting.ipynb"
            },
            {
              "name": "linear_regression.ipynb",
              "description": "Demonstrates polynomial curve fitting with matrix based linear solver, scipy optimisation of a misfit, and Bayesian sampling of a posterior PDF.",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression.ipynb"
            },
            {
              "name": "linear_regression_sealevel.ipynb",
              "description": "Demonstrates polynomial curve fitting of a real Sea level dataset using a matrix based linear solver, scipy optimisation of a misfit, and Bayesian sampling of a posterior PDF, with user challenges.",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_sealevel.ipynb"
            },
            {
              "name": "linear_regression_emcee_sampler.py",
              "description": "Script demonstrating Bayesian sampling with emcee in a simple polynomial regression problem.",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_emcee_sampler.py"
            },
            {
              "name": "linear_regression_linear_system_solver.py",
              "description": "Script demonstrating (local) matrix based solver for a simple polynomial regression problem.",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_linear_system_solver.py"
            },
            {
              "name": "linear_regression_linear_system_general.py",
              "description": "Script demonstrating scipy Least Squares matrix based solver for a simple polynomial regression problem.",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_linear_system_general.py"
            },
            {
              "name": "linear_regression_optimizer_lstsq.py",
              "description": "Linear regression problem solved by linear solver, optimizer and sampler",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_optimizer_lstsq.py"
            },
            {
              "name": "linear_regression_optimizer_minimize.py",
              "description": "Linear regression problem solved by linear solver, optimizer and sampler",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_optimizer_minimize.py"
            },
            {
              "name": "linear_regression_pytorch_optim.py",
              "description": "Linear regression problem solved by linear solver, optimizer and sampler",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_pytorch_optim.py"
            }
          ],
          "tutorials": [
            {
              "name": "linear_regression.ipynb",
              "description": "Linear regression problem solved by linear solver, optimizer and sampler",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/linear_regression/linear_regression.ipynb"
            }
          ],
          "children": [
            {
              "name": "Applied statistics",
              "link_git": null,
              "link_doc": null,
              "description": null,
              "examples": [
                {
                  "name": "nonlinear_curve_fitting.ipynb",
                  "description": "We solve a synthetic non-linear curve fitting problem in a deterministic setting (using Levenberg-Marquardt) and a probabilistic setting (using the stretch move in an affine-invariant sampler)",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/nonlinear_curve_fitting/nonlinear_curve_fitting.ipynb"
                },
                {
                  "name": "linear_regression.ipynb",
                  "description": "Demonstrates polynomial curve fitting with matrix based linear solver, scipy optimisation of a misfit, and Bayesian sampling of a posterior PDF.",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression.ipynb"
                },
                {
                  "name": "linear_regression_sealevel.ipynb",
                  "description": "Demonstrates polynomial curve fitting of a real Sea level dataset using a matrix based linear solver, scipy optimisation of a misfit, and Bayesian sampling of a posterior PDF, with user challenges.",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_sealevel.ipynb"
                },
                {
                  "name": "linear_regression_emcee_sampler.py",
                  "description": "Script demonstrating Bayesian sampling with emcee in a simple polynomial regression problem.",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_emcee_sampler.py"
                },
                {
                  "name": "linear_regression_linear_system_solver.py",
                  "description": "Script demonstrating (local) matrix based solver for a simple polynomial regression problem.",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_linear_system_solver.py"
                },
                {
                  "name": "linear_regression_linear_system_general.py",
                  "description": "Script demonstrating scipy Least Squares matrix based solver for a simple polynomial regression problem.",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_linear_system_general.py"
                },
                {
                  "name": "linear_regression_optimizer_lstsq.py",
                  "description": "Linear regression problem solved by linear solver, optimizer and sampler",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_optimizer_lstsq.py"
                },
                {
                  "name": "linear_regression_optimizer_minimize.py",
                  "description": "Linear regression problem solved by linear solver, optimizer and sampler",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_optimizer_minimize.py"
                },
                {
                  "name": "linear_regression_pytorch_optim.py",
                  "description": "Linear regression problem solved by linear solver, optimizer and sampler",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_pytorch_optim.py"
                }
              ],
              "tutorials": [
                {
                  "name": "linear_regression.ipynb",
                  "description": "Linear regression problem solved by linear solver, optimizer and sampler",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/linear_regression/linear_regression.ipynb"
                }
              ],
              "children": [
                {
                  "name": "Curve fitting",
                  "link_git": null,
                  "link_doc": null,
                  "description": null,
                  "examples": [
                    {
                      "name": "nonlinear_curve_fitting.ipynb",
                      "description": "We solve a synthetic non-linear curve fitting problem in a deterministic setting (using Levenberg-Marquardt) and a probabilistic setting (using the stretch move in an affine-invariant sampler)",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/nonlinear_curve_fitting/nonlinear_curve_fitting.ipynb"
                    },
                    {
                      "name": "linear_regression.ipynb",
                      "description": "Demonstrates polynomial curve fitting with matrix based linear solver, scipy optimisation of a misfit, and Bayesian sampling of a posterior PDF.",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression.ipynb"
                    },
                    {
                      "name": "linear_regression_sealevel.ipynb",
                      "description": "Demonstrates polynomial curve fitting of a real Sea level dataset using a matrix based linear solver, scipy optimisation of a misfit, and Bayesian sampling of a posterior PDF, with user challenges.",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_sealevel.ipynb"
                    },
                    {
                      "name": "linear_regression_emcee_sampler.py",
                      "description": "Script demonstrating Bayesian sampling with emcee in a simple polynomial regression problem.",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_emcee_sampler.py"
                    },
                    {
                      "name": "linear_regression_linear_system_solver.py",
                      "description": "Script demonstrating (local) matrix based solver for a simple polynomial regression problem.",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_linear_system_solver.py"
                    },
                    {
                      "name": "linear_regression_linear_system_general.py",
                      "description": "Script demonstrating scipy Least Squares matrix based solver for a simple polynomial regression problem.",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_linear_system_general.py"
                    },
                    {
                      "name": "linear_regression_optimizer_lstsq.py",
                      "description": "Linear regression problem solved by linear solver, optimizer and sampler",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_optimizer_lstsq.py"
                    },
                    {
                      "name": "linear_regression_optimizer_minimize.py",
                      "description": "Linear regression problem solved by linear solver, optimizer and sampler",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_optimizer_minimize.py"
                    },
                    {
                      "name": "linear_regression_pytorch_optim.py",
                      "description": "Linear regression problem solved by linear solver, optimizer and sampler",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_pytorch_optim.py"
                    }
                  ],
                  "tutorials": [
                    {
                      "name": "linear_regression.ipynb",
                      "description": "Linear regression problem solved by linear solver, optimizer and sampler",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/linear_regression/linear_regression.ipynb"
                    }
                  ],
                  "children": [
                    {
                      "name": "Non linear regression",
                      "link_git": null,
                      "link_doc": null,
                      "description": null,
                      "examples": [
                        {
                          "name": "nonlinear_curve_fitting.ipynb",
                          "description": "We solve a synthetic non-linear curve fitting problem in a deterministic setting (using Levenberg-Marquardt) and a probabilistic setting (using the stretch move in an affine-invariant sampler)",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/nonlinear_curve_fitting/nonlinear_curve_fitting.ipynb"
                        }
                      ],
                      "children": []
                    },
                    {
                      "name": "Linear regression",
                      "link_git": null,
                      "link_doc": null,
                      "description": null,
                      "examples": [
                        {
                          "name": "linear_regression.ipynb",
                          "description": "Demonstrates polynomial curve fitting with matrix based linear solver, scipy optimisation of a misfit, and Bayesian sampling of a posterior PDF.",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression.ipynb"
                        },
                        {
                          "name": "linear_regression_sealevel.ipynb",
                          "description": "Demonstrates polynomial curve fitting of a real Sea level dataset using a matrix based linear solver, scipy optimisation of a misfit, and Bayesian sampling of a posterior PDF, with user challenges.",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_sealevel.ipynb"
                        },
                        {
                          "name": "linear_regression_emcee_sampler.py",
                          "description": "Script demonstrating Bayesian sampling with emcee in a simple polynomial regression problem.",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_emcee_sampler.py"
                        },
                        {
                          "name": "linear_regression_linear_system_solver.py",
                          "description": "Script demonstrating (local) matrix based solver for a simple polynomial regression problem.",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_linear_system_solver.py"
                        },
                        {
                          "name": "linear_regression_linear_system_general.py",
                          "description": "Script demonstrating scipy Least Squares matrix based solver for a simple polynomial regression problem.",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_linear_system_general.py"
                        },
                        {
                          "name": "linear_regression_optimizer_lstsq.py",
                          "description": "Linear regression problem solved by linear solver, optimizer and sampler",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_optimizer_lstsq.py"
                        },
                        {
                          "name": "linear_regression_optimizer_minimize.py",
                          "description": "Linear regression problem solved by linear solver, optimizer and sampler",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_optimizer_minimize.py"
                        },
                        {
                          "name": "linear_regression_pytorch_optim.py",
                          "description": "Linear regression problem solved by linear solver, optimizer and sampler",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/linear_regression/linear_regression_pytorch_optim.py"
                        }
                      ],
                      "tutorials": [
                        {
                          "name": "linear_regression.ipynb",
                          "description": "Linear regression problem solved by linear solver, optimizer and sampler",
                          "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/tutorials/linear_regression/linear_regression.ipynb"
                        }
                      ],
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "Applied mathematics",
          "link_git": null,
          "link_doc": null,
          "description": null,
          "examples": [
            {
              "name": "modified_himmelblau.ipynb",
              "description": "Finding the global minimum of a modified Himmelblau function",
              "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/test_functions_for_optimization/modified_himmelblau.ipynb"
            }
          ],
          "children": [
            {
              "name": "Optimisation",
              "link_git": null,
              "link_doc": null,
              "description": null,
              "examples": [
                {
                  "name": "modified_himmelblau.ipynb",
                  "description": "Finding the global minimum of a modified Himmelblau function",
                  "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/test_functions_for_optimization/modified_himmelblau.ipynb"
                }
              ],
              "children": [
                {
                  "name": "Metaheuristic optimisation",
                  "link_git": null,
                  "link_doc": null,
                  "description": null,
                  "examples": [
                    {
                      "name": "modified_himmelblau.ipynb",
                      "description": "Finding the global minimum of a modified Himmelblau function",
                      "linkToGit": "https://github.com/inlab-geo/cofi-examples/tree/main/examples/test_functions_for_optimization/modified_himmelblau.ipynb"
                    }
                  ],
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}